[user]
  name = Roberto Di Remigio
  email = roberto.diremigio@gmail.com
  signingkey = DFB29C6E
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[color]
  ui = true
[core]
  autocrlf=input
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
  editor = nvim
[grep]
  linenumber = true
[push]
  default = current
[pull]
  rebase = false
[merge]
  tool = meld
[mergetool]
  prompt = false
[diff]
  tool = meld
[difftool]
  prompt = false
[commit]
  gpgSign = true
[tag]
  gpgSign = true
[log]
  mailmap = true
[http]
  sslVerify = false
[alias]
  oldest-ancestor = !bash -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -
  cloner = clone --recursive
  last = log -1 HEAD
  unstage = reset HEAD --
  ll = log --stat
  sha = log --pretty=format:'%h' -n 1
  subtree-add = "!f() { git subtree add --prefix $2 $1 $3 --squash;  }; f"
  subtree-pull = "!f() { git subtree pull --prefix $2 $1 $3 --squash;  }; f"
  sed = "!f() { cd ${GIT_PREFIX:-.} && git grep -l \"$1\" | xargs sed -i -e \"s/$1/$2/$3\"; }; f"
  archeo-grep = "!f() { git rev-list --all | xargs git grep \"$1\"; }; f"
  latest = "!f() { git log --pretty=format:\"%ci %cr %h\" \"$1\" | head -n 1; }; f"
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  co = checkout
  ci = commit
  st = status
  br = branch
  history = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  type = cat-file -t
  dump = cat-file -p
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  accept-ours = "!f() { files=\"$@\"; [ -z $files ] && files='.'; git checkout --ours -- $files; git add -u $files; }; f"
  accept-theirs = "!f() { files=\"$@\"; [ -z $files ] && files='.'; git checkout --theirs -- $files; git add -u $files; }; f"
  recent = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
  branch-name = rev-parse --abbrev-ref HEAD

